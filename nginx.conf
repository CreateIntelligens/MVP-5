events {
    worker_connections 20000;  # 大幅提高並發連接數
    use epoll;  # Linux 高效事件模型
    multi_accept on;  # 一次接受多個連接
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    resolver      127.0.0.11 ipv6=off valid=30s;
    
    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # 基本設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 300;  # 提高到 5 分鐘
    keepalive_requests 10000;  # 單連接可處理更多請求
    types_hash_max_size 2048;
    server_tokens off;

    # 檔案上傳大小限制
    client_max_body_size 20M;  # 提高到 20MB
    client_body_timeout 300s;  # 客戶端 body 超時
    client_header_timeout 60s;  # 客戶端 header 超時
    send_timeout 300s;  # 發送超時
    
    # 移除限流 - 所有請求都排隊不拒絕
    # limit_req_zone $binary_remote_addr zone=api:100m rate=20000r/s;
    # limit_req_zone $binary_remote_addr zone=upload:100m rate=15000r/s;

    # 連接池配置
    upstream backend_pool {
        server backend:3001 max_fails=5 fail_timeout=30s;
        keepalive 1000;  # 保持 1000 個空閒連接
        keepalive_requests 10000;
        keepalive_timeout 300s;
    }
    
    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    server {
        listen 80 reuseport;  # 啟用 socket sharding
        server_name localhost;
        set $backend_upstream backend:3001;

        # 連接優化
        reset_timedout_connection on;
        client_body_buffer_size 256k;
        client_header_buffer_size 8k;
        large_client_header_buffers 8 16k;
        
        # 根路徑重定向到 faceswap (保持 port)
        location = / {
            return 301 $scheme://$host:8882/faceswap/;
        }
        
        # FaceSwap 應用 - 處理沒有斜線的情況 (保持 port)
        location = /faceswap {
            return 301 $scheme://$host:8882/faceswap/;
        }
        
        # FaceSwap 應用
        location /faceswap/ {
            alias /usr/share/nginx/html/;
            index index.html;
            try_files $uri $uri/ /faceswap/index.html;
            
            # 快取設定
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # API 文檔頁面
        location = /faceswap/api {
            root /usr/share/nginx/html;
            try_files /api.html =404;
            add_header Content-Type text/html;
        }
        
        # API 代理到後端 - 使用連接池
        location /api/ {
            # 移除限流 - 所有請求都接受
            # limit_req zone=api burst=10000 nodelay;

            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # 超時設定 - 30 分鐘（允許更長排隊時間）
            proxy_connect_timeout 1800s;
            proxy_send_timeout 1800s;  # 30 分鐘
            proxy_read_timeout 1800s;  # 30 分鐘

            # 重試設定
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 120s;

            # Buffer 設定
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 32 8k;
            proxy_busy_buffers_size 16k;

            client_max_body_size 20M;
        }
        
        # 狀態查詢 API (優先匹配，不限流，快速回應)
        location /api/face-swap/status/ {
            deny 35.185.160.249;
            allow all;
            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # 調整 timeout - 30 分鐘
            proxy_connect_timeout 1200s;
            proxy_send_timeout 1800s;
            proxy_read_timeout 1800s;
        }
        
        # 換臉 API 特別設定
        location /api/face-swap {
            # 移除限流 - 所有請求都接受並排隊
            # limit_req zone=upload burst=8000 nodelay;

            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # AI換臉處理超時設定 - 30 分鐘
            proxy_connect_timeout 1800s;
            proxy_send_timeout 1800s;  # 30 分鐘
            proxy_read_timeout 1800s;  # 30 分鐘

            # 重試設定
            proxy_next_upstream error invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 1;  # face-swap 不適合重試

            # Buffer 設定
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 64 16k;
            proxy_busy_buffers_size 32k;
            proxy_max_temp_file_size 2048m;

            client_max_body_size 20M;
        }
        
        # 結果檔案靜態提供（直接由 Nginx 讀取共享卷）
        location /results/ {
            alias /results/;
            autoindex off;
            expires 24h;
            add_header Cache-Control "public, max-age=86400";
            try_files $uri =404;
        }

        # 原圖檔案靜態提供
        location /uploads/ {
            alias /uploads/;
            autoindex off;
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            try_files $uri =404;
        }

        # 模板圖片代理
        location /models/ {
            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_connect_timeout 1800s;
            proxy_send_timeout 1800s;
            proxy_read_timeout 1800s;
        }
        
        # 健康檢查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 自訂錯誤頁面處理
        location /nginx-error {
            internal;
            return 200 '{"error": "Service temporarily unavailable", "code": $status}';
            add_header Content-Type application/json;
        }
        
        # 錯誤頁面設定
        error_page 404 = @not_found;
        error_page 500 502 503 504 = @server_error;
        
        location @not_found {
            return 404 '{"error": "Not found", "code": 404}';
            add_header Content-Type application/json;
        }
        
        location @server_error {
            return 502 '{"error": "Backend unavailable", "code": 502}';
            add_header Content-Type application/json;
        }
    }
}
