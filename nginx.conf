events {
    worker_connections 10000;  # 支援高並發
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    resolver      127.0.0.11 ipv6=off valid=30s;
    
    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # 基本設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 檔案上傳大小限制
    client_max_body_size 10M;
    
    # 高流量限流配置
    limit_req_zone $binary_remote_addr zone=api:50m rate=10000r/s;
    limit_req_zone $binary_remote_addr zone=upload:50m rate=5000r/s;
    
    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    server {
        listen 80;
        server_name localhost;
        set $backend_upstream backend:3001;
        
        # 根路徑重定向到 faceswap (保持 port)
        location = / {
            return 301 $scheme://$host:8882/faceswap/;
        }
        
        # FaceSwap 應用 - 處理沒有斜線的情況 (保持 port)
        location = /faceswap {
            return 301 $scheme://$host:8882/faceswap/;
        }
        
        # FaceSwap 應用
        location /faceswap/ {
            alias /usr/share/nginx/html/;
            index index.html;
            try_files $uri $uri/ /faceswap/index.html;
            
            # 快取設定
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # API 文檔頁面
        location = /faceswap/api {
            root /usr/share/nginx/html;
            try_files /api.html =404;
            add_header Content-Type text/html;
        }
        
        # API 代理到後端 - 使用 upstream
        location /api/ {
            # 支持突發流量
            limit_req zone=api burst=5000 nodelay;

            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # 超時設定 (AI處理需要較長時間)
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # 重試設定
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 60s;
            
            client_max_body_size 10M;
        }
        
        # 狀態查詢 API (優先匹配，不限流，快速回應)
        location /api/face-swap/status/ {
            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # 合理 timeout - 避免高負載時誤判
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # 換臉 API 特別設定
        location /api/face-swap {
            # 支持突發上傳流量
            limit_req zone=upload burst=3000 nodelay;
            
            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # AI換臉處理超時設定
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # 重試設定
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 1;  # face-swap 不適合重試
            
            client_max_body_size 10M;
        }
        
        # 結果檔案代理
        location /results/ {
            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
        
        # 原圖檔案代理
        location /uploads/ {
            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
        
        # 模板圖片代理
        location /models/ {
            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
        
        # 健康檢查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 自訂錯誤頁面處理
        location /nginx-error {
            internal;
            return 200 '{"error": "Service temporarily unavailable", "code": $status}';
            add_header Content-Type application/json;
        }
        
        # 錯誤頁面設定
        error_page 404 = @not_found;
        error_page 500 502 503 504 = @server_error;
        
        location @not_found {
            return 404 '{"error": "Not found", "code": 404}';
            add_header Content-Type application/json;
        }
        
        location @server_error {
            return 502 '{"error": "Backend unavailable", "code": 502}';
            add_header Content-Type application/json;
        }
    }
}
