services:
  # 模型下載服務（一次性，完成後自動清理）
  model-downloader:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-face-swap-model-downloader
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        if [ ! -f /app/models/inswapper_128.onnx ]; then
          echo '🔄 正在下載 AI 模型檔案...'
          mkdir -p /app/models
          
          # 嘗試第一個下載源
          echo '📥 嘗試從 HuggingFace 下載...'
          if wget --timeout=60 --tries=3 --progress=bar:force:noscroll -O /app/models/inswapper_128.onnx 'https://huggingface.co/spaces/mkrzyzan/face-swap/resolve/main/inswapper_128.onnx'; then
            # 安全獲取檔案大小
            if [ -f /app/models/inswapper_128.onnx ]; then
              FILE_SIZE=$(stat -c%s /app/models/inswapper_128.onnx 2>/dev/null || echo "0")
              FILE_SIZE=${FILE_SIZE:-0}
              echo "📊 下載檔案大小: $FILE_SIZE bytes"
              
              # 驗證檔案大小（正常應該約為 256MB = 268435456 bytes）
              if [ $FILE_SIZE -lt 200000000 ]; then
                echo '❌ 檔案太小，可能下載不完整，嘗試備用下載源...'
                rm -f /app/models/inswapper_128.onnx
                echo '📥 嘗試從 GitHub 下載...'
                wget --timeout=60 --tries=3 --progress=bar:force:noscroll -O /app/models/inswapper_128.onnx 'https://github.com/facefusion/facefusion-assets/releases/download/models/inswapper_128.onnx'
                if [ -f /app/models/inswapper_128.onnx ]; then
                  FILE_SIZE=$(stat -c%s /app/models/inswapper_128.onnx 2>/dev/null || echo "0")
                  FILE_SIZE=${FILE_SIZE:-0}
                  echo "📊 備用源檔案大小: $FILE_SIZE bytes"
                }
              }
            }
          else
            echo '❌ 第一個下載源失敗，嘗試備用下載源...'
            echo '📥 嘗試從 GitHub 下載...'
            wget --timeout=60 --tries=3 --progress=bar:force:noscroll -O /app/models/inswapper_128.onnx 'https://github.com/facefusion/facefusion-assets/releases/download/models/inswapper_128.onnx'
            if [ -f /app/models/inswapper_128.onnx ]; then
              FILE_SIZE=$(stat -c%s /app/models/inswapper_128.onnx 2>/dev/null || echo "0")
              FILE_SIZE=${FILE_SIZE:-0}
              echo "📊 備用源檔案大小: $FILE_SIZE bytes"
            }
          }
          
          # 最終驗證
          if [ -f /app/models/inswapper_128.onnx ]; then
            FILE_SIZE=$(stat -c%s /app/models/inswapper_128.onnx 2>/dev/null || echo "0")
            FILE_SIZE=${FILE_SIZE:-0}
            if [ $FILE_SIZE -lt 200000000 ]; then
              echo '❌ 所有下載源都失敗或檔案損壞，請檢查網路連接'
              rm -f /app/models/inswapper_128.onnx
              exit 1
            else
              echo "✅ AI 模型下載成功！檔案大小: $FILE_SIZE bytes"
              # 嘗試驗證檔案是否為有效的 ONNX 檔案
              if python3 -c "import onnx; onnx.load('/app/models/inswapper_128.onnx'); print('✅ ONNX 檔案格式驗證通過')" 2>/dev/null; then
                echo '✅ 模型檔案驗證完成'
              else
                echo '⚠️  無法驗證 ONNX 格式，但檔案大小正常'
              }
            }
          else
            echo '❌ 模型檔案下載失敗'
            exit 1
          }
          
          ls -lh /app/models/inswapper_128.onnx
        else
          echo '✅ AI 模型已存在，跳過下載'
          if [ -f /app/models/inswapper_128.onnx ]; then
            FILE_SIZE=$(stat -c%s /app/models/inswapper_128.onnx 2>/dev/null || echo "0")
            FILE_SIZE=${FILE_SIZE:-0}
            echo "📊 現有檔案大小: $FILE_SIZE bytes"
            ls -lh /app/models/inswapper_128.onnx
          else
            echo '⚠️  模型檔案不存在，但目錄檢查顯示存在'
          }
        }
      "
    restart: "no"

  # SSL憑證初始化服務
  ssl-init:
    image: alpine:latest
    container_name: ai-face-swap-ssl-init
    volumes:
      - ./ssl:/ssl
    environment:
      - HOST_IP=${HOST_IP:-localhost}
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
      - SSL_COUNTRY=${SSL_COUNTRY:-TW}
      - SSL_STATE=${SSL_STATE:-Taiwan}
      - SSL_CITY=${SSL_CITY:-Taipei}
      - SSL_ORG=${SSL_ORG:-Dev}
      - SSL_DAYS=${SSL_DAYS:-365}
    command: >
      sh -c "
        apk add --no-cache openssl &&
        mkdir -p /ssl &&
        if [ ! -f /ssl/nginx-selfsigned.key ] || [ ! -f /ssl/nginx-selfsigned.crt ]; then
          echo 'Generating SSL keypair...' &&
          rm -f /ssl/nginx-selfsigned.key /ssl/nginx-selfsigned.crt &&
          openssl genrsa -out /ssl/nginx-selfsigned.key 2048 &&
          openssl req -new -x509 -key /ssl/nginx-selfsigned.key -out /ssl/nginx-selfsigned.crt -days 365 -subj '/C=TW/ST=Taiwan/L=Taipei/O=Dev/CN=localhost' -addext 'subjectAltName=DNS:localhost,IP:127.0.0.1' &&
          echo 'SSL keypair generated';
        else
          echo 'SSL certificates already exist';
        fi &&
        chmod 600 /ssl/nginx-selfsigned.key &&
        chmod 644 /ssl/nginx-selfsigned.crt &&
        echo 'SSL certificates ready!'
      "
    restart: "no"

  frontend:
    image: docker.io/library/nginx:alpine
    container_name: ai-face-swap-frontend
    ports:
      - "8881:80"   # HTTP (重定向到HTTPS)  
      - "8882:443"  # HTTPS (維持原有的對外port)
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      # SSL憑證目錄
      - ./ssl:/etc/ssl/certs:ro
      - ./ssl:/etc/ssl/private:ro
    environment:
      - HOST_IP=${HOST_IP:-localhost}
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
    depends_on:
      backend:
        condition: service_started
      ssl-init:
        condition: service_completed_successfully
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-face-swap-backend
    expose:
      - "3001"
    volumes:
      # 一次全掛載整個後端目錄
      - ./backend:/app
    depends_on:
      - model-downloader
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    privileged: true
    # 使用開發模式啟動命令，支援自動重載
    command: ["python", "-m", "uvicorn", "app:app", "--host", "0.0.0.0", "--port", "3001", "--reload"]

networks:
  default:
    name: ai-avatar-studio-network
